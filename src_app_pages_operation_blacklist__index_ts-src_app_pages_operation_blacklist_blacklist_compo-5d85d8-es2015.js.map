{"version":3,"file":"src_app_pages_operation_blacklist__index_ts-src_app_pages_operation_blacklist_blacklist_compo-5d85d8-es2015.js","mappings":"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","sources":["./src/app/pages/operation/blacklist/_index.ts","./src/app/pages/operation/blacklist/blacklist-routing.module.ts","./src/app/pages/operation/blacklist/blacklist.component.ts","./src/app/pages/operation/blacklist/blacklist.component.html","./src/app/pages/operation/blacklist/blacklist.module.ts","./src/app/pages/operation/blacklist/blacklist.service.ts"],"sourcesContent":["export * from './blacklist-routing.module'\r\nexport * from './blacklist.component'\r\nexport * from './blacklist.module'\r\nexport * from './blacklist.service'\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BlacklistComponent } from './blacklist.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: BlacklistComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BlacklistRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { BlacklistService } from './_index';\r\n\r\n@Component({\r\n  selector: 'ngx-blacklist',\r\n  styleUrls: ['./blacklist.component.scss'],\r\n  templateUrl: `./blacklist.component.html`,\r\n})\r\nexport class BlacklistComponent implements OnInit{\r\n\r\n  public form: FormGroup;\r\n  public submitted: boolean = false;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public service: BlacklistService,\r\n    public toastrService: NbToastrService,\r\n    public router: Router,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.service.save(this.form.value).subscribe(\r\n      () => {\r\n        this.loading = false;\r\n        this.toastrService.success('Concluido','Concluido com Sucesso')\r\n        this.reset();\r\n      },\r\n      () => {\r\n        this.toastrService.danger('Erro','Não foi possivel comunicar com o servidor')\r\n        this.loading = false;\r\n      },\r\n    );\r\n\r\n  }\r\n\r\n\r\n  public reset(){\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n  public createForm() {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      personType: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      ie: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n      cnpj: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      reasonOutOf: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n      reasonCanceled: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n    });\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n    if (!this.submitted ) {\r\n      return 'basic';\r\n     }\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n\r\n  }\r\n\r\n  public get personType() {\r\n    return this.form.get('personType');\r\n  }\r\n\r\n  public get ie() {\r\n    return this.form.get('ie');\r\n  }\r\n\r\n  public get cnpj() {\r\n    return this.form.get('cnpj');\r\n  }\r\n\r\n  public get reasonOutOf() {\r\n    return this.form.get('reasonOutOf');\r\n  }\r\n\r\n  public get reasonCanceled() {\r\n    return this.form.get('reasonCanceled');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate [nbSpinner]=\"loading\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-2 col-12\">\r\n\r\n      <nb-card>\r\n        <nb-card-header class=\"text-center\">\r\n          Blacklist\r\n        </nb-card-header>\r\n      </nb-card>\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-body>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"placa\" class=\"label\">Adicionar à Blacklist*:</label>\r\n\r\n            <nb-select\r\n              fullWidth\r\n              placeholder=\"Selecione\"\r\n              [status]='getStatus(personType)'\r\n              [formControl]=\"personType\"\r\n              [ngClass]=\"{\r\n                'is-valid': (personType.valid && personType.touched),\r\n                'is-invalid': (personType.invalid && personType.touched) }\"\r\n              >\r\n              <nb-option value=\"1\">Pessoa Jurídica</nb-option>\r\n              <nb-option value=\"2\">Pessoa Física</nb-option>\r\n            </nb-select>\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"ie\" class=\"label\">EI:</label>\r\n            <input\r\n              id=\"ie\"\r\n              type=\"text\"\r\n              [status]='getStatus(ie)'\r\n              formControlName=\"ie\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"IE\"\r\n              [ngClass]=\"{'is-valid': (ie.valid && ie.touched), 'is-invalid': (ie.invalid && ie.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"cnpj\" class=\"label\">CNPJ*:</label>\r\n            <input\r\n              id=\"cnpj\"\r\n              type=\"text\"\r\n              [status]='getStatus(cnpj)'\r\n              formControlName=\"cnpj\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"CNPJ\"\r\n              [ngClass]=\"{'is-valid': (cnpj.valid && cnpj.touched), 'is-invalid': (cnpj.invalid && cnpj.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <label for=\"cnpj\" class=\"label\">Motivos*:</label>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n\r\n                <nb-checkbox\r\n                  [formControl]=\"reasonCanceled\"\r\n                  [status]='getStatus(reasonCanceled)'\r\n                  [ngClass]=\"{\r\n                    'is-valid': (reasonCanceled.valid && reasonCanceled.touched),\r\n                    'is-invalid': (reasonCanceled.invalid && reasonCanceled.touched) }\"\r\n                  >\r\n                  NOTA FISCAL CANCELADA\r\n                </nb-checkbox>\r\n\r\n                <nb-checkbox\r\n                  [formControl]=\"reasonOutOf\"\r\n                  [status]='getStatus(reasonOutOf)'\r\n                  [ngClass]=\"{\r\n                    'is-valid': (reasonOutOf.valid && reasonOutOf.touched),\r\n                    'is-invalid': (reasonOutOf.invalid && reasonOutOf.touched) }\">\r\n\r\n                  DESVIO DE ROTA\r\n                </nb-checkbox>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nb-card-body>\r\n      </nb-card>\r\n\r\n      <button\r\n        nbButton\r\n        fullWidth\r\n        status=\"primary\"\r\n        size=\"large\">\r\n        Concluir\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NbCardModule, NbInputModule, NbButtonModule, NbSelectModule, NbSpinnerModule, NbRadioModule, NbToggleModule, NbCheckboxModule } from '@nebular/theme';\r\nimport { BlacklistComponent, BlacklistRoutingModule, BlacklistService } from './_index';\r\n\r\n@NgModule({\r\n  imports:\r\n  [\r\n    BlacklistRoutingModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    CommonModule,\r\n    NbSelectModule,\r\n    NbRadioModule,\r\n    NbToggleModule,\r\n    NbCheckboxModule,\r\n  ],\r\n\r\n  declarations:\r\n  [\r\n    BlacklistComponent,\r\n  ],\r\n\r\n  providers:\r\n  [\r\n    BlacklistService\r\n  ]\r\n\r\n})\r\nexport class BlacklistModule {\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class BlacklistService  {\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}/blacklist`;\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(this.getUrl(), t);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}