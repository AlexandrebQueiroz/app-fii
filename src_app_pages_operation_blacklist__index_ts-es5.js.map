{"version":3,"mappings":"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","names":["routes","path","component","_blacklist_component__WEBPACK_IMPORTED_MODULE_0__","BlacklistRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","BlacklistComponent","fb","service","toastrService","router","createForm","submitted","form","invalid","loading","save","value","subscribe","success","navigate","danger","group","personType","_angular_forms__WEBPACK_IMPORTED_MODULE_1__","ie","cnpj","reason","field","valid","get","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","consts","template","ctx","BlacklistModule","_index__WEBPACK_IMPORTED_MODULE_0__","_nebular_theme__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","declarations","BlacklistService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","t","post","getUrl","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory"],"sources":["webpack:///src/app/pages/operation/blacklist/blacklist-routing.module.ts","webpack:///src/app/pages/operation/blacklist/blacklist.component.ts","webpack:///src/app/pages/operation/blacklist/blacklist.component.html","webpack:///src/app/pages/operation/blacklist/blacklist.module.ts","webpack:///src/app/pages/operation/blacklist/blacklist.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BlacklistComponent } from './blacklist.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: BlacklistComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BlacklistRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { BlacklistService } from './_index';\r\n\r\n@Component({\r\n  selector: 'ngx-blacklist',\r\n  styleUrls: ['./blacklist.component.scss'],\r\n  templateUrl: `./blacklist.component.html`,\r\n})\r\nexport class BlacklistComponent implements OnInit{\r\n\r\n  public form: FormGroup;\r\n  public submitted: boolean = false;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public service: BlacklistService,\r\n    public toastrService: NbToastrService,\r\n    public router: Router,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.service.save(this.form.value).subscribe(\r\n      () => {\r\n        this.loading = false;\r\n        this.toastrService.success('Concluido','Concluido com Sucesso')\r\n        this.router.navigate([ './pages/operation/alert' ]);\r\n      },\r\n      () => {\r\n        this.toastrService.danger('Erro','Não foi possivel comunicar com o servidor')\r\n        this.loading = false;\r\n      },\r\n    );\r\n\r\n  }\r\n\r\n  public createForm() {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      personType: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      ie: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n      cnpj: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      reason: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n    });\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n    if (!this.submitted ) {\r\n      return 'basic';\r\n     }\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n\r\n  }\r\n\r\n  public get personType() {\r\n    return this.form.get('personType');\r\n  }\r\n\r\n  public get ie() {\r\n    return this.form.get('ie');\r\n  }\r\n\r\n  public get cnpj() {\r\n    return this.form.get('cnpj');\r\n  }\r\n\r\n  public get reason() {\r\n    return this.form.get('reason');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate [nbSpinner]=\"loading\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-2 col-12\">\r\n\r\n      <nb-card>\r\n        <nb-card-header class=\"text-center\">\r\n          Blacklist\r\n        </nb-card-header>\r\n      </nb-card>\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-body>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"placa\" class=\"label\">Adicionar à Blacklist*:</label>\r\n\r\n            <nb-select\r\n              fullWidth\r\n              placeholder=\"Selecione\"\r\n              [status]='getStatus(personType)'\r\n              [formControl]=\"personType\"\r\n              [ngClass]=\"{\r\n                'is-valid': (personType.valid && personType.touched),\r\n                'is-invalid': (personType.invalid && personType.touched) }\"\r\n              >\r\n              <nb-option value=\"1\">Pessoa Jurídica</nb-option>\r\n              <nb-option value=\"2\">Pessoa Física</nb-option>\r\n            </nb-select>\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"ie\" class=\"label\">EI:</label>\r\n            <input\r\n              id=\"ie\"\r\n              type=\"text\"\r\n              [status]='getStatus(ie)'\r\n              formControlName=\"ie\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"IE\"\r\n              [ngClass]=\"{'is-valid': (ie.valid && ie.touched), 'is-invalid': (ie.invalid && ie.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"cnpj\" class=\"label\">CNPJ*:</label>\r\n            <input\r\n              id=\"cnpj\"\r\n              type=\"text\"\r\n              [status]='getStatus(cnpj)'\r\n              formControlName=\"cnpj\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"CNPJ\"\r\n              [ngClass]=\"{'is-valid': (cnpj.valid && cnpj.touched), 'is-invalid': (cnpj.invalid && cnpj.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <label for=\"cnpj\" class=\"label\">Motivos*:</label>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <nb-radio-group\r\n                  id=\"reason\"\r\n                  fullWidth\r\n                  [formControl]=\"reason\"\r\n                  [status]='getStatus(reason)'\r\n                  name=\"reactive-forms-group\"\r\n                  [ngClass]=\"{\r\n                    'is-valid': (reason.valid && reason.touched),\r\n                    'is-invalid': (reason.invalid && reason.touched) }\"\r\n                  >\r\n                  <nb-radio value=\"1\">NOTA FISCAL CANCELADA</nb-radio>\r\n                  <nb-radio value=\"2\">DESVIO DE ROTA</nb-radio>\r\n                </nb-radio-group>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nb-card-body>\r\n      </nb-card>\r\n\r\n      <button\r\n        nbButton\r\n        fullWidth\r\n        status=\"primary\"\r\n        size=\"large\">\r\n        Concluir\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NbCardModule, NbInputModule, NbButtonModule, NbSelectModule, NbSpinnerModule, NbRadioModule } from '@nebular/theme';\r\nimport { BlacklistComponent, BlacklistRoutingModule, BlacklistService } from './_index';\r\n\r\n@NgModule({\r\n  imports:\r\n  [\r\n    BlacklistRoutingModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    CommonModule,\r\n    NbSelectModule,\r\n    NbRadioModule,\r\n  ],\r\n\r\n  declarations:\r\n  [\r\n    BlacklistComponent,\r\n  ],\r\n\r\n  providers:\r\n  [\r\n    BlacklistService\r\n  ]\r\n\r\n})\r\nexport class BlacklistModule {\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class BlacklistService  {\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}/blacklist`;\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(this.getUrl(), t);\r\n  }\r\n\r\n}\r\n"]}