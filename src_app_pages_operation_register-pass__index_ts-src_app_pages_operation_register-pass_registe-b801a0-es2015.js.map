{"version":3,"file":"src_app_pages_operation_register-pass__index_ts-src_app_pages_operation_register-pass_registe-b801a0-es2015.js","mappings":"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","sources":["./src/app/pages/operation/register-pass/_index.ts","./src/app/pages/operation/register-pass/register-pass-routing.module.ts","./src/app/pages/operation/register-pass/register-pass.component.ts","./src/app/pages/operation/register-pass/register-pass.component.html","./src/app/pages/operation/register-pass/register-pass.module.ts","./src/app/pages/operation/register-pass/register-pass.service.ts"],"sourcesContent":["export * from './register-pass-routing.module'\r\nexport * from './register-pass.component'\r\nexport * from './register-pass.module'\r\nexport * from './register-pass.service'\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterpassComponent } from './register-pass.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: RegisterpassComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPassRoutingModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NbIconConfig, NbToastrService } from '@nebular/theme';\r\nimport { State } from '../../../@core/data/state';\r\nimport { RegisterPassService } from './register-pass.service';\r\n\r\n@Component({\r\n  selector: 'ngx-registerpass',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: `./register-pass.component.html`,\r\n  styles: [`\r\n  :host nb-tab {\r\n    padding: 1.25rem;\r\n  }`],\r\n})\r\nexport class RegisterpassComponent implements OnInit{\r\n\r\n  public form: FormGroup;\r\n  public submitted: boolean = false;\r\n  public loading: boolean = false;\r\n  public states: State[] = [];\r\n\r\n  public bookIcon: NbIconConfig = { icon: 'book-outline', pack: 'eva' };\r\n  public carIcon: NbIconConfig = { icon: 'car-outline', pack: 'eva' };\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public service: RegisterPassService,\r\n    public toastrService: NbToastrService,\r\n    public router: Router,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n    this.initStates()\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.service.save(this.form.value).subscribe(\r\n      () => {\r\n        this.loading = false;\r\n        this.toastrService.success('Concluido','Concluido com Sucesso')\r\n        this.router.navigate([ './pages/operation/alert' ]);\r\n      },\r\n      () => {\r\n        this.toastrService.danger('Erro','NÃ£o foi possivel comunicar com o servidor')\r\n        this.loading = false;\r\n      },\r\n    );\r\n\r\n  }\r\n\r\n  public createForm() {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      uf: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      regress: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      plate: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n    });\r\n  }\r\n\r\n  public initStates(){\r\n    this.service.getStates().subscribe((states)=>{\r\n      this.states = states;\r\n    })\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n    if (!this.submitted ) {\r\n      return 'basic';\r\n     }\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n\r\n  }\r\n\r\n  public get uf() {\r\n    return this.form.get('uf');\r\n  }\r\n\r\n  public get regress() {\r\n    return this.form.get('regress');\r\n  }\r\n\r\n  public get plate() {\r\n    return this.form.get('plate');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate [nbSpinner]=\"loading\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-2 col-12\">\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-header class=\"text-center\">\r\n          Registrar Passagem\r\n        </nb-card-header>\r\n\r\n      </nb-card>\r\n\r\n        <nb-card>\r\n          <nb-card-body>\r\n            <div class=\"row\">\r\n              <nb-tabset fullWidth>\r\n                <nb-tab [tabIcon]=\"bookIcon\">\r\n\r\n                  <div class=\"row text-center\">\r\n                    <h6>Dados da Passagem</h6>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <label class=\"label\">Unidade Fiscal*:</label>\r\n                    <nb-select\r\n                      *ngIf=\"states\"\r\n                      fullWidth\r\n                      class=\"form-group\"\r\n                      placeholder=\"Selecione\"\r\n                      [status]='getStatus(uf)'\r\n                      [formControl]=\"uf\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (uf.valid && uf.touched),\r\n                        'is-invalid': (uf.invalid && uf.touched) }\"\r\n                      >\r\n                      <nb-option *ngFor=\"let state of states\" [value]='state.name'>{{state.initial}}</nb-option>\r\n                    </nb-select>\r\n\r\n\r\n                    <label class=\"label\">Sentido da Via*:</label>\r\n                    <nb-select\r\n                      *ngIf=\"states\"\r\n                      fullWidth\r\n                      class=\"form-group\"\r\n                      placeholder=\"Selecione\"\r\n                      [status]='getStatus(uf)'\r\n                      [formControl]=\"uf\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (uf.valid && uf.touched),\r\n                        'is-invalid': (uf.invalid && uf.touched) }\"\r\n                      >\r\n                      <nb-option *ngFor=\"let state of states\" [value]='state.name'>{{state.initial}}</nb-option>\r\n                    </nb-select>\r\n\r\n\r\n                    <label class=\"label\">UF de destino:</label>\r\n                    <nb-select\r\n                      *ngIf=\"states\"\r\n                      fullWidth\r\n                      class=\"form-group\"\r\n                      placeholder=\"Selecione\"\r\n                      [status]='getStatus(uf)'\r\n                      [formControl]=\"uf\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (uf.valid && uf.touched),\r\n                        'is-invalid': (uf.invalid && uf.touched) }\"\r\n                      >\r\n                      <nb-option *ngFor=\"let state of states\" [value]='state.name'>{{state.initial}}</nb-option>\r\n                    </nb-select>\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"col-12\">\r\n                        <label class=\"label\">Retorno?:</label>\r\n                      </div>\r\n\r\n                      <div class=\"col-12\">\r\n                        <nb-radio-group\r\n                        id=\"regress\"\r\n                        fullWidth\r\n                        title=\"Retorno\"\r\n                        [formControl]=\"regress\"\r\n                        [status]='getStatus(regress)'\r\n                        name=\"reactive-forms-group\"\r\n                        [ngClass]=\"{\r\n                          'is-valid': (regress.valid && regress.touched),\r\n                          'is-invalid': (regress.invalid && regress.touched) }\"\r\n                        >\r\n                        <nb-radio value=\"1\">Sim</nb-radio>\r\n                        <nb-radio value=\"2\">NÃ£o</nb-radio>\r\n\r\n                      </nb-radio-group>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </nb-tab>\r\n\r\n                <nb-tab [tabIcon]=\"carIcon\">\r\n                  <div class=\"row text-center\">\r\n                    <h6>Dados do Transporte</h6>\r\n                  </div>\r\n\r\n                  <div class=\"row form-group\">\r\n\r\n                    <label for=\"plate\" class=\"label\">Placa do Veiculo*:</label>\r\n                    <input\r\n                      id=\"plate\"\r\n                      type=\"text\"\r\n                      [status]='getStatus(plate)'\r\n                      formControlName=\"plate\"\r\n                      nbInput\r\n                      class=\"form-group\"\r\n                      fullWidth\r\n                      placeholder=\"Placa do veiculos\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (plate.valid && plate.touched),\r\n                        'is-invalid': (plate.invalid && plate.touched) }\"\r\n                    >\r\n\r\n                    <label class=\"label\">UF Veiculos*:</label>\r\n                    <nb-select\r\n                    *ngIf=\"states\"\r\n                    fullWidth\r\n                    class=\"form-group\"\r\n                    placeholder=\"Selecione\"\r\n                    [status]='getStatus(uf)'\r\n                    [formControl]=\"uf\"\r\n                    [ngClass]=\"{\r\n                      'is-valid': (uf.valid && uf.touched),\r\n                      'is-invalid': (uf.invalid && uf.touched) }\"\r\n                      >\r\n                      <nb-option *ngFor=\"let state of states\" [value]='state.name'>{{state.initial}}</nb-option>\r\n                    </nb-select>\r\n\r\n                    <label class=\"label\">Placa Carreta:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      [status]='getStatus(plate)'\r\n                      formControlName=\"plate\"\r\n                      nbInput\r\n                      class=\"form-group\"\r\n                      fullWidth\r\n                      placeholder=\"Placa do veiculos\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (plate.valid && plate.touched),\r\n                        'is-invalid': (plate.invalid && plate.touched) }\"\r\n                    >\r\n\r\n                    <label class=\"label\">ObservaÃ§Ãµes:</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      [status]='getStatus(plate)'\r\n                      formControlName=\"plate\"\r\n                      nbInput\r\n                      class=\"form-group\"\r\n                      fullWidth\r\n                      placeholder=\"ObservaÃ§Ãµes\"\r\n                      [ngClass]=\"{\r\n                        'is-valid': (plate.valid && plate.touched),\r\n                        'is-invalid': (plate.invalid && plate.touched) }\"\r\n                    >\r\n                    </textarea>\r\n\r\n\r\n                  </div>\r\n                </nb-tab>\r\n\r\n              </nb-tabset>\r\n            </div>\r\n          </nb-card-body>\r\n        </nb-card>\r\n\r\n      <button\r\n        nbButton\r\n        fullWidth\r\n        status=\"primary\"\r\n        size=\"large\">\r\n        Registrar Passagem\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NbButtonModule, NbCardModule, NbInputModule, NbRadioModule, NbSelectModule, NbSpinnerModule, NbTabsetModule } from '@nebular/theme';\r\nimport { RegisterpassComponent, RegisterPassRoutingModule, RegisterPassService } from './_index';\r\n\r\n@NgModule({\r\n  imports:\r\n  [\r\n    RegisterPassRoutingModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    CommonModule,\r\n    NbTabsetModule,\r\n    NbRadioModule,\r\n  ],\r\n\r\n  declarations:\r\n  [\r\n    RegisterpassComponent,\r\n  ],\r\n\r\n  providers:\r\n  [\r\n    RegisterPassService\r\n  ]\r\n\r\n})\r\nexport class RegisterPassModule {\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { State } from '../../../@core/data/state';\r\nimport { Observable, of as observableOf } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class RegisterPassService  {\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}/register-pass`;\r\n  }\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    ) {\r\n\r\n  }\r\n\r\n  getStates(): Observable<State[]>{\r\n    return observableOf([\r\n      { name: 'AC', initial: 'Acre' },\r\n      { name: 'AL', initial: 'Alagoas' },\r\n      { name: 'AP', initial: 'AmapÃ¡' },\r\n      { name: 'AM', initial: 'Amazonas' },\r\n      { name: 'BA', initial: 'Bahia' },\r\n      { name: 'CE', initial: 'Ceara' },\r\n      { name: 'DF', initial: 'Distrito Federal' },\r\n      { name: 'ES', initial: 'EspÃ­rito Santo' },\r\n      { name: 'GO', initial: 'GoiÃ¡s' },\r\n      { name: 'MA', initial: 'MaranhÃ£o' },\r\n      { name: 'MT', initial: 'Mato Grosso' },\r\n      { name: 'MS', initial: 'Mato Grosso do Sul' },\r\n      { name: 'MG', initial: 'Minas Gerais' },\r\n      { name: 'PA', initial: 'ParÃ¡' },\r\n      { name: 'PB', initial: 'ParaÃ­ba' },\r\n      { name: 'PR', initial: 'ParanÃ¡' },\r\n      { name: 'PE', initial: 'Pernambuco' },\r\n      { name: 'PI', initial: 'PiauÃ­' },\r\n      { name: 'RJ', initial: 'Rio de Janeiro' },\r\n      { name: 'RN', initial: 'Rio Grande do Norte' },\r\n      { name: 'RS', initial: 'Rio Grande do Sul' },\r\n      { name: 'RO', initial: 'RondÃ´nia' },\r\n      { name: 'RR', initial: 'Roraima' },\r\n      { name: 'SC', initial: 'Santa Catarina' },\r\n      { name: 'SP', initial: 'SÃ£o Paulo' },\r\n      { name: 'SE', initial: 'Sergipe' },\r\n      { name: 'TO', initial: 'Tocantins' },\r\n    ]);\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(this.getUrl(), t);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}