{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,UAAMA,OAAM,GAAW,CAC5B;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,0DAFb;AAGEC,gBAAQ,EAAC,CACP;AACEH,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAEG;AAFb,SADO;AAHX,OAD4B,CAAvB;;UAiBMC;;;;;yBAAAA;AAAoB;;;cAApBA;;;kBAHF,CAACC,mEAAsBP,OAAtB,CAAD,GACCO;;;;4HAECD,uBAAoB;AAAAE;AAAAC,oBAFrBF,yDAEqB;AAAA;AAFT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYXG;;;;;yBAAAA;AAAa;;;cAAbA;;;kBAfF,CACPC,sEADO,EAEPC,yDAFO,EAGPC,uDAHO,EAIPC,yDAJO,EAKPC,yDALO,EAMPA,yDANO,EAOPA,0DAPO,EAQPA,4DARO,EASPC,uDATO;;;;4HAeEN,gBAAa;AAAAO,yBAHtBC,qEAGsB;AAHLV,oBAXjBG,sEAWiB,EAVjBC,yDAUiB,EATjBC,uDASiB,EARjBC,yDAQiB,EAPjBC,yDAOiB,EANjBA,yDAMiB,EALjBA,0DAKiB,EAJjBA,4DAIiB,EAHjBC,uDAGiB;AAGK;AANV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBZG;;AAAuDA;;AAAWA;;;;;;AAAXA;;AAAAA;;;;;;AAH3DA;;AACEA;;AAAuBA;;AAAGA;;AAAQA;;AAAIA;;AACtCA;;AACEA;;AACFA;;AACFA;;;;;;AAF0BA;;AAAAA;;;;;;AAOtBA;;AAA2DA;;AAAaA;;;;;;AAAbA;;AAAAA;;;;;;AAH/DA;;AACEA;;AAAuBA;;AAAGA;;AAAOA;;AAAIA;;AACrCA;;AACEA;;AACFA;;AACFA;;;;;;AAF4BA;;AAAAA;;;;;;AAqBtBA;;AACEA;;AACFA;;;;;;AAHFA;;AACEA;;AAGFA;;;;;;;;AAHoCA;;AAAAA;;;;;;AAsBlCA;;AACEA;;AACFA;;;;;;AACAA;;AACEA;;AAIFA;;;;;;AAJEA;;AAAAA;;;;;;AALJA;;AACEA;;AAGAA;;AAMFA;;;;;;;;AAToCA;;AAAAA;;AAGAA;;AAAAA;;;;UCnD3BC;;;;;;;;;;;;QAA0BjB;;;;;0JAA1BiB,sBAAiBC,KAAjBD;AAAiB;AAAA;;;cAAjBA;AAAiBE;AAAAC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADP9BR;;AAA6BA;;AAAMA;;AAEnCA;;AAOAA;;AAOAA;;AAAMA;AAAA,qBAAYS,WAAZ;AAAmB,aAAnB;;AAEJT;;AACEA;;AAAuCA;;AAAKA;;AAC5CA;;AAEOA;AAAA;AAAA;;AAFPA;;AAYAA;;AAKFA;;AAEAA;;AACEA;;AAEOA;AAAA;AAAA;;AAFPA;;AAcAA;;AAWFA;;AAGAA;;AACAA;;AACAA;;AACAA;;AAEAA;;AAOEA;;AACFA;;AAEFA;;;;;;;;;;AAjFWA;;AAAAA;;AAOAA;;AAAAA;;AAaAA;;AAAAA,gGAAwB,QAAxB,EAAwBU,wDAAxB,EAAwB,UAAxB,EAAwBD,qDAAxB;;AASAT;;AACQA;;AAAAA;;AAURA;;AAAAA,mGAA2B,QAA3B,EAA2BW,wDAA3B,EAA2B,UAA3B,EAA2BF,wDAA3B,EAA2B,WAA3B,EAA2BA,yDAA3B,EAA2B,WAA3B,EAA2BA,yDAA3B;;AAWAT;;AACQA;;AAAAA;;AAyBfA;;AAAAA;;AADAA;;;;;;;;","names":["routes","path","component","_nebular_auth__WEBPACK_IMPORTED_MODULE_1__","children","_login_login_component__WEBPACK_IMPORTED_MODULE_0__","NgxAuthRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","imports","exports","NgxAuthModule","_auth_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_nebular_theme__WEBPACK_IMPORTED_MODULE_6__","_nebular_auth__WEBPACK_IMPORTED_MODULE_7__","declarations","_login_login_component__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_0__","NgxLoginComponent","t","selectors","features","decls","vars","consts","template","ctx","_r3","_r5"],"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { NgxLoginComponent } from './login/login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children:[\r\n      {\r\n        path: 'login',\r\n        component: NgxLoginComponent\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport {\r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbInputModule\r\n} from '@nebular/theme';\r\nimport { NgxLoginComponent } from './login/login.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxAuthRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    NgxLoginComponent\r\n  ],\r\n})\r\nexport class NgxAuthModule {\r\n}\r\n","<h1 id=\"title\" class=\"title\">Entrar</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">Nome:</label>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.email\"\r\n           #email=\"ngModel\"\r\n           name=\"email\"\r\n           id=\"input-email\"\r\n           placeholder=\"Nome\"\r\n           fieldSize=\"large\"\r\n           autofocus\r\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.email.required')\"\r\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        Nome é obrigatório!\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.password\"\r\n           #password=\"ngModel\"\r\n           name=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           placeholder=\"Password\"\r\n           fieldSize=\"large\"\r\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.password.required')\"\r\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Senha é obrigatório!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\r\n        Password should contain\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n\r\n  <br/>\r\n  <br/>\r\n  <br/>\r\n  <br/>\r\n\r\n  <button\r\n    nbButton\r\n    fullWidth\r\n    status=\"primary\"\r\n    size=\"large\"\r\n    [disabled]=\"submitted || !form.valid\"\r\n    [class.btn-pulse]=\"submitted\">\r\n    Entrar\r\n  </button>\r\n\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class NgxLoginComponent extends NbLoginComponent {\r\n}\r\n"]}