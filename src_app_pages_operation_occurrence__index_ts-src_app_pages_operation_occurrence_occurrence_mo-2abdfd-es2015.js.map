{"version":3,"file":"src_app_pages_operation_occurrence__index_ts-src_app_pages_operation_occurrence_occurrence_mo-2abdfd-es2015.js","mappings":"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","sources":["./src/app/pages/operation/occurrence/_index.ts","./src/app/pages/operation/occurrence/occurrence-routing.module.ts","./src/app/pages/operation/occurrence/occurrence.component.ts","./src/app/pages/operation/occurrence/occurrence.component.html","./src/app/pages/operation/occurrence/occurrence.module.ts","./src/app/pages/operation/occurrence/occurrence.service.ts"],"sourcesContent":["export * from './occurrence-routing.module'\r\nexport * from './occurrence.component'\r\nexport * from './occurrence.module'\r\nexport * from './occurrence.service'\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OccurrenceComponent } from './occurrence.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: OccurrenceComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OccurrenceRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { OccurrenceService } from './occurrence.service';\r\n\r\n@Component({\r\n  selector: 'ngx-occurrence',\r\n  templateUrl: `./occurrence.component.html`,\r\n})\r\nexport class OccurrenceComponent implements OnInit{\r\n\r\n  public form: FormGroup;\r\n  public submitted: boolean = false;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public service: OccurrenceService,\r\n    public toastrService: NbToastrService,\r\n    public router: Router,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.service.save(this.form.value).subscribe(\r\n      () => {\r\n        this.loading = false;\r\n        this.toastrService.success('Concluido','Concluido com Sucesso')\r\n        this.router.navigate([ './pages/operation/alert' ]);\r\n      },\r\n      () => {\r\n        this.toastrService.danger('Erro','Não foi possivel comunicar com o servidor')\r\n        this.loading = false;\r\n      },\r\n    );\r\n\r\n  }\r\n\r\n  public createForm() {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      plate: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      direction: new FormControl(\r\n        null, [\r\n        Validators.required,//'/[A-Z]{3}[0-9][0-9A-Z][0-9]{2}/'\r\n      ]),\r\n\r\n      vehicle: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n    });\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n    if (!this.submitted ) {\r\n      return 'basic';\r\n     }\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n\r\n  }\r\n\r\n  public get plate() {\r\n    return this.form.get('plate');\r\n  }\r\n\r\n  public get direction() {\r\n    return this.form.get('direction');\r\n  }\r\n\r\n  public get vehicle() {\r\n    return this.form.get('vehicle');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate [nbSpinner]=\"loading\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-2 col-12\">\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-header class=\"text-center\">\r\n          Ocorrências\r\n        </nb-card-header>\r\n\r\n      </nb-card>\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-body>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"placa\" class=\"label\">Placa*:</label>\r\n            <input\r\n              id=\"placa\"\r\n              type=\"text\"\r\n              [status]='getStatus(plate)'\r\n              formControlName=\"plate\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"Placa\"\r\n              [ngClass]=\"{'is-valid': (plate.valid && plate.touched), 'is-invalid': (plate.invalid && plate.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"valid-feedback\">\r\n            Valido\r\n          </div>\r\n\r\n          <div class=\"invalid-feedback\">\r\n            Invalido\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"direction\" class=\"label\">Sentido*:</label>\r\n            <input\r\n              id=\"direction\"\r\n              type=\"text\"\r\n              [status]='getStatus(direction)'\r\n              formControlName=\"direction\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"Sentido\"\r\n              [ngClass]=\"{'is-valid': (direction.valid && direction.touched), 'is-invalid': (direction.invalid && direction.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"direction\" class=\"label\">Tipo de veiculo:</label>\r\n\r\n            <input\r\n              id=\"vehicle\"\r\n              type=\"text\"\r\n              [status]='getStatus(vehicle)'\r\n              formControlName=\"vehicle\"\r\n              class=\"form-control\"\r\n              nbInput\r\n              fullWidth\r\n              placeholder=\"Tipo de veiculo\"\r\n              [ngClass]=\"{'is-valid': (vehicle.valid && vehicle.touched), 'is-invalid': (vehicle.invalid && vehicle.touched) }\">\r\n          </div>\r\n\r\n        </nb-card-body>\r\n      </nb-card>\r\n\r\n      <button\r\n        nbButton\r\n        fullWidth\r\n        status=\"primary\"\r\n        size=\"large\">\r\n        Concluir\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NbCardModule, NbInputModule, NbButtonModule, NbSelectModule, NbSpinnerModule } from '@nebular/theme';\r\nimport { OccurrenceComponent, OccurrenceRoutingModule, OccurrenceService } from './_index';\r\n\r\n@NgModule({\r\n  imports:\r\n  [\r\n    OccurrenceRoutingModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    CommonModule,\r\n  ],\r\n\r\n  declarations:\r\n  [\r\n    OccurrenceComponent,\r\n  ],\r\n\r\n  providers:\r\n  [\r\n    OccurrenceService\r\n  ]\r\n\r\n})\r\nexport class OccurrenceModule {\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class OccurrenceService  {\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}/occurrence`;\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(this.getUrl(), t);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}