{"version":3,"file":"src_app_auth_auth_module_ts-es2015.js","mappings":"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","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NbAuthComponent } from '@nebular/auth';\r\nimport { NgxLoginComponent } from './login/login.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NbAuthComponent,\r\n    children:[\r\n      {\r\n        path: 'login',\r\n        component: NgxLoginComponent\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NgxAuthRoutingModule {\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { NgxAuthRoutingModule } from './auth-routing.module';\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport {\r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbCheckboxModule,\r\n  NbInputModule\r\n} from '@nebular/theme';\r\nimport { NgxLoginComponent } from './login/login.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxAuthRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [\r\n    NgxLoginComponent\r\n  ],\r\n})\r\nexport class NgxAuthModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class NgxLoginComponent extends NbLoginComponent {\r\n}\r\n","<h1 id=\"title\" class=\"title\">Entrar</h1>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n  <p class=\"alert-title\"><b>Hooray!</b></p>\r\n  <ul class=\"alert-message-list\">\r\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n  </ul>\r\n</nb-alert>\r\n\r\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">Nome:</label>\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.email\"\r\n           #email=\"ngModel\"\r\n           name=\"email\"\r\n           id=\"input-email\"\r\n           placeholder=\"Nome\"\r\n           fieldSize=\"large\"\r\n           autofocus\r\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.email.required')\"\r\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\r\n    <ng-container *ngIf=\"email.invalid && email.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n        Nome é obrigatório!\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <input nbInput\r\n           fullWidth\r\n           [(ngModel)]=\"user.password\"\r\n           #password=\"ngModel\"\r\n           name=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           placeholder=\"Password\"\r\n           fieldSize=\"large\"\r\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n           [required]=\"getConfigValue('forms.validation.password.required')\"\r\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched \">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        Senha é obrigatório!\r\n      </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\r\n        Password should contain\r\n        from {{ getConfigValue('forms.validation.password.minLength') }}\r\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n        characters\r\n      </p>\r\n    </ng-container>\r\n  </div>\r\n\r\n\r\n  <br/>\r\n  <br/>\r\n  <br/>\r\n  <br/>\r\n\r\n  <button\r\n    nbButton\r\n    fullWidth\r\n    status=\"primary\"\r\n    size=\"large\"\r\n    [disabled]=\"submitted || !form.valid\"\r\n    [class.btn-pulse]=\"submitted\">\r\n    Entrar\r\n  </button>\r\n\r\n</form>\r\n"],"names":[],"sourceRoot":"webpack:///"}