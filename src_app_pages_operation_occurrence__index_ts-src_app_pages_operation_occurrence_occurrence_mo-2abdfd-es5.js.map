{"version":3,"mappings":"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","names":["routes","path","component","_occurrence_component__WEBPACK_IMPORTED_MODULE_0__","OccurrenceRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","OccurrenceComponent","fb","service","toastrService","router","createForm","submitted","form","invalid","loading","save","value","subscribe","success","reset","danger","group","plate","_angular_forms__WEBPACK_IMPORTED_MODULE_1__","direction","vehicle","field","valid","get","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","consts","template","ctx","OccurrenceModule","_index__WEBPACK_IMPORTED_MODULE_0__","_nebular_theme__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","declarations","OccurrenceService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","t","post","getUrl","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory"],"sources":["webpack:///src/app/pages/operation/occurrence/occurrence-routing.module.ts","webpack:///src/app/pages/operation/occurrence/occurrence.component.ts","webpack:///src/app/pages/operation/occurrence/occurrence.component.html","webpack:///src/app/pages/operation/occurrence/occurrence.module.ts","webpack:///src/app/pages/operation/occurrence/occurrence.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OccurrenceComponent } from './occurrence.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: OccurrenceComponent,\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OccurrenceRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { OccurrenceService } from './occurrence.service';\r\n\r\n@Component({\r\n  selector: 'ngx-occurrence',\r\n  templateUrl: `./occurrence.component.html`,\r\n})\r\nexport class OccurrenceComponent implements OnInit{\r\n\r\n  public form: FormGroup;\r\n  public submitted: boolean = false;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public service: OccurrenceService,\r\n    public toastrService: NbToastrService,\r\n    public router: Router,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm()\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.service.save(this.form.value).subscribe(\r\n      () => {\r\n        this.loading = false;\r\n        this.toastrService.success('Concluido','Concluido com Sucesso')\r\n        this.reset();\r\n      },\r\n      () => {\r\n        this.toastrService.danger('Erro','Não foi possivel comunicar com o servidor')\r\n        this.loading = false;\r\n      },\r\n    );\r\n\r\n  }\r\n\r\n  public reset(){\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n\r\n  public createForm() {\r\n\r\n    this.form = this.fb.group({\r\n\r\n      plate: new FormControl(\r\n        null, [\r\n        Validators.required,\r\n      ]),\r\n\r\n      direction: new FormControl(\r\n        null, [\r\n        Validators.required,//'/[A-Z]{3}[0-9][0-9A-Z][0-9]{2}/'\r\n      ]),\r\n\r\n      vehicle: new FormControl(\r\n        null, [\r\n      ]),\r\n\r\n    });\r\n  }\r\n\r\n  public getStatus(field: any): string {\r\n\r\n    if (!this.submitted ) {\r\n      return 'basic';\r\n     }\r\n\r\n     if (field.valid) {\r\n       return 'success';\r\n     }\r\n\r\n     return 'danger';\r\n\r\n  }\r\n\r\n  public get plate() {\r\n    return this.form.get('plate');\r\n  }\r\n\r\n  public get direction() {\r\n    return this.form.get('direction');\r\n  }\r\n\r\n  public get vehicle() {\r\n    return this.form.get('vehicle');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation\" novalidate [nbSpinner]=\"loading\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-2 col-12\">\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-header class=\"text-center\">\r\n          Ocorrências\r\n        </nb-card-header>\r\n\r\n      </nb-card>\r\n\r\n      <nb-card>\r\n\r\n        <nb-card-body>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"placa\" class=\"label\">Placa*:</label>\r\n            <input\r\n              id=\"placa\"\r\n              type=\"text\"\r\n              [status]='getStatus(plate)'\r\n              formControlName=\"plate\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"Placa\"\r\n              [ngClass]=\"{'is-valid': (plate.valid && plate.touched), 'is-invalid': (plate.invalid && plate.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"valid-feedback\">\r\n            Valido\r\n          </div>\r\n\r\n          <div class=\"invalid-feedback\">\r\n            Invalido\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"direction\" class=\"label\">Sentido*:</label>\r\n            <input\r\n              id=\"direction\"\r\n              type=\"text\"\r\n              [status]='getStatus(direction)'\r\n              formControlName=\"direction\"\r\n              nbInput\r\n              class=\"form-control\"\r\n              fullWidth\r\n              placeholder=\"Sentido\"\r\n              [ngClass]=\"{'is-valid': (direction.valid && direction.touched), 'is-invalid': (direction.invalid && direction.touched) }\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"row form-group\">\r\n            <label for=\"direction\" class=\"label\">Tipo de veiculo:</label>\r\n\r\n            <input\r\n              id=\"vehicle\"\r\n              type=\"text\"\r\n              [status]='getStatus(vehicle)'\r\n              formControlName=\"vehicle\"\r\n              class=\"form-control\"\r\n              nbInput\r\n              fullWidth\r\n              placeholder=\"Tipo de veiculo\"\r\n              [ngClass]=\"{'is-valid': (vehicle.valid && vehicle.touched), 'is-invalid': (vehicle.invalid && vehicle.touched) }\">\r\n          </div>\r\n\r\n        </nb-card-body>\r\n      </nb-card>\r\n\r\n      <button\r\n        nbButton\r\n        fullWidth\r\n        status=\"primary\"\r\n        size=\"large\">\r\n        Concluir\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NbCardModule, NbInputModule, NbButtonModule, NbSelectModule, NbSpinnerModule } from '@nebular/theme';\r\nimport { OccurrenceComponent, OccurrenceRoutingModule, OccurrenceService } from './_index';\r\n\r\n@NgModule({\r\n  imports:\r\n  [\r\n    OccurrenceRoutingModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    CommonModule,\r\n  ],\r\n\r\n  declarations:\r\n  [\r\n    OccurrenceComponent,\r\n  ],\r\n\r\n  providers:\r\n  [\r\n    OccurrenceService\r\n  ]\r\n\r\n})\r\nexport class OccurrenceModule {\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class OccurrenceService  {\r\n\r\n  getUrl(): string {\r\n    return `${environment.baseUrl}/occurrence`;\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n\r\n  }\r\n\r\n  save(t: any): Observable<any> {\r\n    return this.http.post<any>(this.getUrl(), t);\r\n  }\r\n\r\n}\r\n"]}